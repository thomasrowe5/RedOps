name: ci-strict
on:
  push:
  pull_request:

jobs:
  setup:
    runs-on: ubuntu-latest
    outputs:
      pycache: ${{ steps.cache-python.outputs.cache-hit }}
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with: { python-version: "3.12" }
      - name: Cache pip
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements*.txt') }}
      - name: Install tooling
        run: |
          python -m pip install --upgrade pip
          pip install ruff mypy black bandit pytest pytest-cov
          pip install -r orchestrator/requirements.txt || true

  lint-type-sec:
    needs: setup
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with: { python-version: "3.12" }
      - run: pip install ruff mypy black bandit
      - name: ruff
        run: ruff check .
      - name: black check
        run: black --check .
      - name: mypy strict
        run: mypy --strict orchestrator agents analysis
      - name: bandit
        run: bandit -r orchestrator agents analysis -ll

  tests:
    needs: lint-type-sec
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with: { python-version: "3.12" }
      - run: pip install -r orchestrator/requirements.txt || true
      - run: pip install pytest pytest-cov requests pyyaml networkx
      - name: run tests
        run: pytest -q --maxfail=1 --disable-warnings --cov=orchestrator --cov=agents --cov=analysis --cov-report=xml
      - name: Upload coverage
        uses: actions/upload-artifact@v4
        with:
          name: coverage-xml
          path: coverage.xml
